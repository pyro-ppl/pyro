language: python

sudo: true

env:
    global:
        - PYTHONPATH=$PWD:$PYTHONPATH
        - CXX="g++-8"
        - CC="gcc-8"

addons:
    apt:
        sources:
            - ubuntu-toolchain-r-test
        packages:
            - gcc-8
            - g++-8
            - ninja-build

cache:
    directories:
        - $HOME/.cache/pip
        - $HOME/.data

install:
    - pip install -U pip
    - if [[ $TRAVIS_PYTHON_VERSION == 2.7 ]]; then
          pip install https://download.pytorch.org/whl/cpu/torch-1.1.0-cp27-cp27mu-linux_x86_64.whl;
          pip install https://download.pytorch.org/whl/cpu/torchvision-0.3.0-cp27-cp27mu-linux_x86_64.whl;
      else
          pip install https://download.pytorch.org/whl/cpu/torch-1.1.0-cp36-cp36m-linux_x86_64.whl;
          pip install https://download.pytorch.org/whl/cpu/torchvision-0.3.0-cp36-cp36m-linux_x86_64.whl;
      fi
    - pip install .[test]
    - pip freeze

branches:
    only:
        - master
        - dev

jobs:
    fast_finish: true
    include:
        - stage: lint
          python: 2.7
          before_install: pip install flake8 nbstripout nbformat
          install:
          script:
              - make lint
              #- make scrub;
              #  git diff-index --quiet HEAD
        - stage: auxiliary modules
          python: 3.6
          env: STAGE=docs
          script:
              - pip install -r docs/requirements.txt
              - make docs
              - make doctest
        - stage: perf
          python: 2.7
          env: STAGE=perf
          script:
              - pip install -e .[profile]
              - pytest -vs --benchmark-disable tests/perf/test_benchmark.py
        - stage: profiler
          python: 2.7
          env: STAGE=profiler
          script:
              - pip install -e .[profile]
              - python -m profiler.distributions
        - stage: unit test
          python: 2.7
          env: STAGE=unit
          script: pytest -vs --cov=pyro --cov-config .coveragerc --stage unit --durations 20
        - python: 2.7
          env: STAGE=examples
          script:
              - CI=1 pytest -vs --cov=pyro --cov-config .coveragerc --stage test_examples --durations 10
              - grep -l smoke_test tutorial/source/*.ipynb | xargs grep -L 'smoke_test = False' \
                  | CI=1 xargs pytest -vx --nbval-lax --current-env
        - python: 3.6
          env: STAGE=unit
          script: pytest -vs --cov=pyro --cov-config .coveragerc --stage unit --durations 20
        - python: 3.6
          env: STAGE=examples
          script:
              - CI=1 pytest -vs --cov=pyro --cov-config .coveragerc --stage test_examples --durations 10
              - grep -l smoke_test tutorial/source/*.ipynb | xargs grep -L 'smoke_test = False' \
                  | CI=1 xargs pytest -vx --nbval-lax --current-env
        - stage: integration test
          python: 2.7
          env: STAGE=integration_batch_1
          script: pytest -vs --cov=pyro --cov-config .coveragerc --stage integration_batch_1 --durations 10
        - python: 2.7
          env: STAGE=integration_batch_2
          script: pytest -vs --cov=pyro --cov-config .coveragerc --stage integration_batch_2 --durations 10
        - python: 3.6
          env: STAGE=integration_batch_1
          script: pytest -vs --cov=pyro --cov-config .coveragerc --stage integration_batch_1 --durations 10
        - python: 3.6
          env: STAGE=integration_batch_2
          script: pytest -vs --cov=pyro --cov-config .coveragerc --stage integration_batch_2 --durations 10

after_success:
          - bash <(curl -s https://codecov.io/bash)
